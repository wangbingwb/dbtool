package ${basePackage}.${moduleName}.svc;

import java.util.List;
import ${basePackage}.${moduleName}.po.${table.getCName()}PO;
import ${basePackage}.${moduleName}.dao.${table.getCName()}Mapper;
import ${basePackage}.${moduleName}.cond.QueryCondition;
import ${basePackage}.${moduleName}.rst.QueryResult;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.apache.ibatis.annotations.Param;

/**
* ${table.tableName} - ${table.tableComment}
*
* @author
* @date ${yyyy-MM-dd}
*/
@Transactional
@Service
public class ${table.getCName()}ServiceImpl implements ${table.getCName()}Service {

    @Autowired
    private ${table.getCName()}Mapper ${table.getFName()}Mapper;

    /**
    * 插入
    *
    * @param po 实体对象
    * @return 返回数量
    */
    public long insert(${table.getCName()}PO po){
        long count = ${table.getFName()}Mapper.insert(po);

        if (count != 1){
            //插入失败

        }
        return count;
    }

    /**
    * 逻辑删除
    *
    * @param po 删除对象
    * @return 返回数量
    */
    public long delete(${table.getCName()}PO po, long expect){

        long count = ${table.getFName()}Mapper.delete(po);

        if (count != 1){
            //删除失败

        }
        return count;
    }

    /**
    * 物理删除
    *
    * @param po 删除对象
    * @return 返回数量
    */
    public long deleteReal(${table.getCName()}PO po){

return 1L;
    }

    /**
    * 更新
    *
    * @param po 实体对象
    * @return 返回数量
    */
    public long update(${table.getCName()}PO po){

        return 1L;
    }

    /**
    * 查询.
    *
    * @param condition 条件
    * @return 实体对象
    */
    @Override
    public QueryResult<${table.getCName()}PO> query(QueryCondition condition) {
        QueryResult<${table.getCName()}PO> result = new QueryResult();

        Long count = ${table.getFName()}Mapper.queryCount(condition);
        result.setTotalCount(count);

        if (count > 0){
            List<${table.getCName()}PO> list = ${table.getFName()}Mapper.query(condition);
            result.setResult(list);
        }
        return result;
    }
}
