package ${basePackage}.framework.freemarker;

import freemarker.template.Configuration;
import org.springframework.context.ApplicationContext;
import org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean;
import org.springframework.web.context.ContextLoader;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;
import org.springframework.web.servlet.DispatcherServlet;
import org.springframework.web.servlet.LocaleResolver;
import org.springframework.web.servlet.View;
import org.springframework.web.servlet.ViewResolver;
import org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator;
import org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import java.io.File;
import java.util.Locale;

/**
 * FreemarkerViewName解析器
 *
 * @author wangbing
 * @version 0.0.1
 * @Time 2017-01-01
 */
public class FreemarkerViewNameTranslator extends DefaultRequestToViewNameTranslator {

    private WebApplicationContext rootWac;
    private ServletContext servletContext;
    private WebApplicationContext mvcApplicationContext;
    private FreeMarkerViewResolver viewResolver;

    @Override
    public String getViewName(HttpServletRequest request) {
        String viewName = "";
        try {
            this.rootWac = ContextLoader.getCurrentWebApplicationContext();
            this.servletContext = rootWac.getServletContext();
            this.mvcApplicationContext = WebApplicationContextUtils.getWebApplicationContext(servletContext, "org.springframework.web.servlet.FrameworkServlet.CONTEXT.mvc-dispatcher");
            this.viewResolver = this.mvcApplicationContext.getBean(FreeMarkerViewResolver.class);
            LocaleResolver localeResolver = (LocaleResolver) request.getAttribute(DispatcherServlet.LOCALE_RESOLVER_ATTRIBUTE);
            String servletPath = request.getServletPath();
            if (servletPath != null && "/".equals(servletPath)) {
                servletPath = "index";
            }
            Locale locale = localeResolver.resolveLocale(request);
            viewName = "layout" + File.separator + servletPath;
            View view = viewResolver.resolveViewName(viewName, locale);
            //无法找到对应layout，使用默认layout
            if (view == null) {
                viewName = "layout" + File.separator + "default";
                View defaultView = viewResolver.resolveViewName(viewName, locale);
                if (defaultView == null) {
                    System.err.println("can not find layout/default.ftl");
                    viewName = "";
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return viewName;
    }
}
