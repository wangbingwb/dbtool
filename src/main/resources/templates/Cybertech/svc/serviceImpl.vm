package ${basePackage}.${moduleName}.svc;

import cn.com.cybertech.commons.db.pagination.Pagination;
import cn.com.cybertech.commons.db.pagination.PaginationOrdersList;
import ${basePackage}.${moduleName}.dao.${table.getCName()}Dao;
import org.springframework.stereotype.Repository;
import org.springframework.beans.factory.annotation.Autowired;
import java.util.List;
import org.springframework.stereotype.Service;
import ${basePackage}.${moduleName}.po.${table.getCName()};

/**
 * ${table.tableName} - ${table.tableComment}
 *
 * @author ${author}
 * @date ${yyyy-MM-dd}
 */
@Service
public class ${table.getCName()}ServiceImpl implements ${table.getCName()}Service{

    @Autowired
    private ${table.getCName()}Dao ${table.getFName()}Dao;

    /**
     * 新增插入
     *
     * @param po 实体对象
     * @return 返回数量
     */
    public long insert(${table.getCName()} po) {
        return ${table.getFName()}Dao.insert(po);
    }

    /**
     * 根据主键删除对象(必须存在主键)
     *
     * @param po 条件
     * @return 数量
     */
    public long deleteById(${table.getCName()} po){
        return ${table.getFName()}Dao.insert(po);
    }

    /**
     * 根据主键更新对象(必须存在主键)
     *
     * @param po 条件
     * @return 数量
     */
    public long updateById(${table.getCName()} po) {
        return ${table.getFName()}Dao.insert(po);
    }

    /**
     * 根据主键查询(必须存在主键,防止多个主键,传参)
     *
     * @param po 条件
     * @return 返回唯一对象
     */
    public ${table.getCName()} getById(${table.getCName()} po) {
        return ${table.getFName()}Dao.getById(po);
    }

    /**
     * 不分页查询
     *
     * @param po 查询参数
     * @return 返回集合
     */
    public List<${table.getCName()}> queryAll(${table.getCName()} po){
        return ${table.getFName()}Dao.queryAll(po);
    }

    /**
     * 通用分页查询(模糊和精确条件组合查询，用于后期定制查询)
     *
     * @param po 查询对象
     * @return 返回对象
     */
    public PaginationOrdersList<${table.getCName()}> query(${table.getCName()} po, PaginationOrdersList<${table.getCName()}> pageBean){

        if (pageBean.getPagination() == null) {
            pageBean.setPagination(new Pagination());
        }
        // 查询记录数
        int rowCount = (int)${table.getFName()}Dao.queryCount(po);
        pageBean.getPagination().setRowCount(rowCount);

        // 查询记录
        List<${table.getCName()}> resourceList = ${table.getFName()}Dao.query(po, pageBean.getPagination().getOffset(),pageBean.getPagination().getPageSize());
        pageBean.setDatas(resourceList);
        return pageBean;
    }

##    /**
##     * 精确分页查询
##     *
##     * @param po 查询对象
##     * @return 返回集合
##     */
##    public List<${table.getCName()}> find(${table.getCName()} po,int beginIndex, int pageSize) {
##        return ${table.getFName()}Dao.find(po, beginIndex, pageSize);
##    }
##
##    /**
##     * 模糊分页查询
##     *
##     * @param po 查询对象
##     * @return 返回对象
##     */
##    public List<${table.getCName()}> search(${table.getCName()} po,int beginIndex, int pageSize) {
##        return ${table.getFName()}Dao.search(po, beginIndex,pageSize);
##    }

    /**
     * 判断主键是否存在
     *
     * @param po 查询参数
     * @return 返回数量
     */
    public boolean existById(${table.getCName()} po) {
        return ${table.getFName()}Dao.existById(po)>0;
    }
}
