package ${basePackage}.${moduleName};

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import static org.junit.Assert.assertTrue;
import ${basePackage}.${moduleName}.business.${table.getCName()}Manager;
import ${basePackage}.${moduleName}.request.*;
import ${basePackage}.${moduleName}.response.*;
import ${basePackage}.${moduleName}.base.Token;
import org.springframework.test.context.transaction.TransactionConfiguration;
import org.springframework.transaction.annotation.Transactional;

/**
* 创建时间：
*
* @author
* @Time ${yyyy-MM-dd}
*/
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:spring.xml"})
@Transactional
@TransactionConfiguration(defaultRollback = true)
public class ${table.getCName()}Test {

    @Autowired
    private Token token;

    @Autowired
    private ${table.getCName()}Manager ${table.getFName()}Manager;

    @Test
    public void testFind() {
        ${table.getCName()}FindRequest request = new ${table.getCName()}FindRequest();

        ${table.getCName()}FindResponse response = ${table.getFName()}Manager.find(request,token);

        assertTrue(!response.hasError());
    }

    @Test
    public void testCreate() {
        ${table.getCName()}CreateRequest request = new ${table.getCName()}CreateRequest();

#foreach($field in $table.fields)
#if($field.toString() == 'String')
        request.${field.setterName()}("${field.fieldComment}");
#elseif($field.toString() == 'Date')
        request.${field.setterName()}(new Date());
#elseif($field.toString() == 'long')
        request.${field.setterName()}(1L);
#elseif($field.toString() == 'boolean')
        request.${field.setterName()}(false);
#end
#end
        ${table.getCName()}CreateResponse response = ${table.getFName()}Manager.create(request,token);

        assertTrue(!response.hasError());
    }

    @Test
    public void testDelete() {
        ${table.getCName()}CreateRequest request = new ${table.getCName()}CreateRequest();

#foreach($field in $table.fields)
#if($field.toString() == 'String')
        request.${field.setterName()}("${field.fieldComment}");
#elseif($field.toString() == 'Date')
        request.${field.setterName()}(new Date());
#elseif($field.toString() == 'long')
        request.${field.setterName()}(1L);
#elseif($field.toString() == 'boolean')
        request.${field.setterName()}(false);
#end
#end
        ${table.getCName()}CreateResponse response = ${table.getFName()}Manager.create(request,token);

        assertTrue(!response.hasError());

        ${table.getCName()}DeleteRequest deleteRequest = new ${table.getCName()}DeleteRequest();

        ${table.getCName()}DeleteResponse deleteResponse = ${table.getFName()}Manager.delete(deleteRequest,token);

        assertTrue(!deleteResponse.hasError());
    }
}