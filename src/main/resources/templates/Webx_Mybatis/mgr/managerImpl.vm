package ${basePackage}.${moduleName}.mgr;

import java.util.List;
import ${basePackage}.framework.ErrorType;
import ${basePackage}.framework.Message;
import ${basePackage}.${moduleName}.mgr.${table.getCName()}Manager;
import ${basePackage}.${moduleName}.po.${table.getCName()}PO;
import ${basePackage}.${moduleName}.dao.${table.getCName()}Mapper;
import ${basePackage}.${moduleName}.request.*;
import ${basePackage}.${moduleName}.response.*;
import ${basePackage}.framework.Token;
import ${basePackage}.framework.IDgenerator;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.apache.ibatis.annotations.Param;

/**
* ${table.tableName} - ${table.tableComment}
*
* @author
* @date ${yyyy-MM-dd}
*/
@Transactional
@Service
public class ${table.getCName()}ManagerImpl implements ${table.getCName()}Manager {

    @Autowired
    private ${table.getCName()}Mapper ${table.getFName()}Mapper;

    /**
    * 插入
    *
    * @param request 实体对象
    * @return 返回数量
    */
    public ${table.getCName()}CreateResponse create(${table.getCName()}CreateRequest request, Token token){
        ${table.getCName()}CreateResponse response = new ${table.getCName()}CreateResponse();

        long id = IDgenerator.nextId();
        request.setId(id);

        if (1 == ${table.getFName()}Mapper.insert(request,token)){
            //插入失败
            response.setId(id);
        }else{
        }

        return response;
    }

    /**
    * 逻辑删除
    *
    * @param request 删除对象
    * @return 返回数量
    */
    public ${table.getCName()}DeleteResponse delete(${table.getCName()}DeleteRequest request, Token token){
        ${table.getCName()}DeleteResponse response = new ${table.getCName()}DeleteResponse();

        long count = ${table.getFName()}Mapper.delete(request,token);
        if (1 == count){
            response.setResult(count);
        }else{
            //删除失败
        }
        return response;
    }

    /**
    * 更新
    *
    * @param request 更新对象
    * @return
    */
    public ${table.getCName()}UpdateResponse update(${table.getCName()}UpdateRequest request, Token token){
        ${table.getCName()}UpdateResponse response = new ${table.getCName()}UpdateResponse();


        return response;
    }

    /**
    * 查询
    *
    * @param request 查询对象
    * @return
    */
    public ${table.getCName()}FindResponse find(${table.getCName()}FindRequest request, Token token) {
        ${table.getCName()}FindResponse response = new ${table.getCName()}FindResponse();

        long count = ${table.getFName()}Mapper.findCount(request,token);
        response.setTotalCount(count);

        if (count > 0){
            List<${table.getCName()}PO> list = ${table.getFName()}Mapper.find(request,token);
            response.setResult(list);
        }
        return response;
    }

    /**
    * 查询所有
    *
    * @return
    */
    public ${table.getCName()}FindAllResponse findAll(${table.getCName()}FindAllRequest request, Token token){
        ${table.getCName()}FindAllResponse response = new ${table.getCName()}FindAllResponse();

        return response;
    }

    /**
    * 获得对象
    *
    * @return
    */
    public ${table.getCName()}GetResponse get(${table.getCName()}GetRequest request, Token token){
        ${table.getCName()}GetResponse response = new ${table.getCName()}GetResponse();

        ${table.getCName()}PO po= ${table.getFName()}Mapper.get(request,token);

        if (po != null){
            response.set${table.getCName()}(po);
        } else {
            response.addError(ErrorType.BUSINESS_ERROR, Message.GET_FAILURE);
        }
        return response;
    }
}
